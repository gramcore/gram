#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/gram/.gram" ]; then
	GRAMD_DEFAULT_DATADIR="/var/lib/gram/.gram"
else
	GRAMD_DEFAULT_DATADIR="/var/lib/gramd"
fi

GRAMD_CONFIGFILE=${GRAMD_CONFIGFILE:-/etc/gram/gram.conf}
GRAMD_PIDDIR=${GRAMD_PIDDIR:-/var/run/gramd}
GRAMD_PIDFILE=${GRAMD_PIDFILE:-${GRAMD_PIDDIR}/gramd.pid}
GRAMD_DATADIR=${GRAMD_DATADIR:-${GRAMD_DEFAULT_DATADIR}}
GRAMD_USER=${GRAMD_USER:-${GRAM_USER:-gram}}
GRAMD_GROUP=${GRAMD_GROUP:-gram}
GRAMD_BIN=${GRAMD_BIN:-/usr/bin/gramd}
GRAMD_NICE=${GRAMD_NICE:-${NICELEVEL:-0}}
GRAMD_OPTS="${GRAMD_OPTS:-${GRAM_OPTS}}"

name="GRAM Core Daemon"
description="GRAM cryptocurrency P2P network daemon"

command="/usr/bin/gramd"
command_args="-pid=\"${GRAMD_PIDFILE}\" \
		-conf=\"${GRAMD_CONFIGFILE}\" \
		-datadir=\"${GRAMD_DATADIR}\" \
		-daemon \
		${GRAMD_OPTS}"

required_files="${GRAMD_CONFIGFILE}"
start_stop_daemon_args="-u ${GRAMD_USER} \
			-N ${GRAMD_NICE} -w 2000"
pidfile="${GRAMD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${GRAMD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${GRAMD_USER}:${GRAMD_GROUP}" \
	"${GRAMD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${GRAMD_USER}:${GRAMD_GROUP}" \
	"${GRAMD_PIDDIR}"

	checkpath -f \
	-o ${GRAMD_USER}:${GRAMD_GROUP} \
	-m 0660 \
	${GRAMD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${GRAMD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run gramd."
		eerror "The setting must appear in ${GRAMD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following"
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is also recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"GRAM Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
